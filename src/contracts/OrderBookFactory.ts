/* Generated by ts-generator ver. 0.0.8 */
/* tslint:disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import { OrderBook } from "./OrderBook";

export class OrderBookFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OrderBook> {
    return super.deploy(overrides || {}) as Promise<OrderBook>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OrderBook {
    return super.attach(address) as OrderBook;
  }
  connect(signer: Signer): OrderBookFactory {
    return super.connect(signer) as OrderBookFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OrderBook {
    return new Contract(address, _abi, signerOrProvider) as OrderBook;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "hash",
        type: "bytes32"
      }
    ],
    name: "OrderCreated",
    type: "event"
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "page",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256"
      }
    ],
    name: "allHashes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "maker",
            type: "address"
          },
          {
            internalType: "address",
            name: "fromToken",
            type: "address"
          },
          {
            internalType: "address",
            name: "toToken",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "amountIn",
            type: "uint256"
          },
          {
            internalType: "uint256",
            name: "amountOutMin",
            type: "uint256"
          },
          {
            internalType: "address",
            name: "recipient",
            type: "address"
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256"
          },
          {
            internalType: "uint8",
            name: "v",
            type: "uint8"
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32"
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32"
          }
        ],
        internalType: "struct Orders.Order",
        name: "order",
        type: "tuple"
      }
    ],
    name: "createOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address"
      },
      {
        internalType: "address",
        name: "fromToken",
        type: "address"
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256"
      }
    ],
    name: "createOrderCallHash",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    stateMutability: "pure",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "page",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256"
      }
    ],
    name: "hashesOfFromToken",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "page",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256"
      }
    ],
    name: "hashesOfMaker",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toToken",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "page",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "limit",
        type: "uint256"
      }
    ],
    name: "hashesOfToToken",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [],
    name: "numberOfAllHashes",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "fromToken",
        type: "address"
      }
    ],
    name: "numberOfHashesOfFromToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address"
      }
    ],
    name: "numberOfHashesOfMaker",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "toToken",
        type: "address"
      }
    ],
    name: "numberOfHashesOfToToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256"
      }
    ],
    stateMutability: "view",
    type: "function"
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32"
      }
    ],
    name: "orderOfHash",
    outputs: [
      {
        internalType: "address",
        name: "maker",
        type: "address"
      },
      {
        internalType: "address",
        name: "fromToken",
        type: "address"
      },
      {
        internalType: "address",
        name: "toToken",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "amountIn",
        type: "uint256"
      },
      {
        internalType: "uint256",
        name: "amountOutMin",
        type: "uint256"
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address"
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256"
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8"
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32"
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32"
      }
    ],
    stateMutability: "view",
    type: "function"
  }
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061102e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80635fd45d24116100715780635fd45d241461013057806365f7a5511461014357806375af1c3614610156578063bceb45db1461015e578063d08b34bb14610187578063df4c1b411461019c576100a9565b806303e0992f146100ae5780630777aa32146100d757806314eaa868146100ea578063257ce8911461010a5780633d91efcf1461011d575b600080fd5b6100c16100bc366004610b03565b6101af565b6040516100ce9190610dd3565b60405180910390f35b6100c16100e5366004610b03565b6101ca565b6100fd6100f8366004610b92565b6101e5565b6040516100ce9190610d8f565b6100c1610118366004610b1e565b610277565b6100c161012b366004610b03565b610294565b6100fd61013e366004610b92565b6102af565b6100fd610151366004610b92565b610337565b6100c16103bf565b61017161016c366004610bc5565b6103c5565b6040516100ce9a99989796959493929190610d30565b61019a610195366004610bdd565b61042b565b005b6100fd6101aa366004610c8c565b6107a6565b6001600160a01b031660009081526002602052604090205490565b6001600160a01b031660009081526001602052604090205490565b606061026f838360026000886001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561025b57602002820191906000526020600020905b815481526020019060010190808311610247575b50505050506108149092919063ffffffff16565b949350505050565b6000610288888888888888886108d3565b98975050505050505050565b6001600160a01b031660009081526003602052604090205490565b606061026f838360016000886001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561025b57602002820191906000526020600020908154815260200190600101908083116102475750505050506108149092919063ffffffff16565b606061026f838360036000886001600160a01b03166001600160a01b0316815260200190815260200160002080548060200260200160405190810160405280929190818152602001828054801561025b57602002820191906000526020600020908154815260200190600101908083116102475750505050506108149092919063ffffffff16565b60005490565b600460208190526000918252604090912080546001820154600283015460038401549484015460058501546006860154600787015460088801546009909801546001600160a01b0397881699968816989588169794959390941693919260ff909116918a565b80516001600160a01b031661045b5760405162461bcd60e51b815260040161045290610e4b565b60405180910390fd5b60208101516001600160a01b03166104855760405162461bcd60e51b815260040161045290610f38565b60408101516001600160a01b03166104af5760405162461bcd60e51b815260040161045290610f9a565b80604001516001600160a01b031681602001516001600160a01b031614156104e95760405162461bcd60e51b815260040161045290610ed7565b600081606001511161050d5760405162461bcd60e51b815260040161045290610f6f565b60008160800151116105315760405162461bcd60e51b815260040161045290610e7a565b60a08101516001600160a01b031661055b5760405162461bcd60e51b815260040161045290610e20565b428160c001511161057e5760405162461bcd60e51b815260040161045290610f0e565b60006105ab826000015183602001518460400151856060015186608001518760a001518860c00151610277565b90506105cc8260000151828460e00151856101000151866101200151610937565b6105e85760405162461bcd60e51b815260040161045290610eaa565b6000818152600460205260409020546001600160a01b03161561061d5760405162461bcd60e51b815260040161045290610dfa565b6000818152600460208181526040808420865181546001600160a01b03199081166001600160a01b039283161783559388015160018301805486169183169190911790559187015160028201805485169184169190911790556060870151600382015560808701519381019390935560a0860151600584018054909316911617905560c08401516006820181905560e085015160078301805460ff191660ff90921691909117905561010085015160088301556101208501516009909201919091556106eb919083906109d0565b81516001600160a01b0316600090815260016020526040902060c0830151610715919083906109d0565b61074c6002600084602001516001600160a01b03166001600160a01b03168152602001908152602001600020828460c001516109d0565b6040808301516001600160a01b0316600090815260036020522060c0830151610777919083906109d0565b60405181907f918554b6bd6e2895ce6553de5de0e1a69db5289aa0e4fe193a0dcd1f1434747790600090a25050565b606061080b8383600080548060200260200160405190810160405280929190818152602001828054801561025b57602002820191906000526020600020908154815260200190600101908083116102475750505050506108149092919063ffffffff16565b90505b92915050565b60608167ffffffffffffffff8111801561082d57600080fd5b50604051908082528060200260200182016040528015610857578160200160208202803683370190505b50905060005b828110156108cb578451818486020110610892576000801b82828151811061088157fe5b6020026020010181815250506108c3565b848184860201815181106108a257fe5b60200260200101518282815181106108b657fe5b6020026020010181815250505b60010161085d565b509392505050565b60007f02f6dc7ce3eb5b1bd3bb37a6ff443d8c9922f817e83adacce3f8c7cdda6fa1e488888888888888604051602001610914989796959493929190610cad565b604051602081830303815290604052805190602001209050979650505050505050565b60008460405160200161094a9190610cff565b604051602081830303815290604052805190602001209450600185858585604051600081526020016040526040516109859493929190610ddc565b6020604051602081039080840390855afa1580156109a7573d6000803e3d6000fd5b505050602060405103516001600160a01b0316866001600160a01b031614905095945050505050565b82546109f057825460018101845560008481526020902001829055610ad6565b60001960005b8454811015610a43578260046000878481548110610a1057fe5b90600052602060002001548152602001908152602001600020600601541115610a3b57809150610a43565b6001016109f6565b50600019811415610a695750825460018101845560008481526020902001829055610ad6565b835460018101855560008590525b81811115610aba57846001820381548110610a8e57fe5b9060005260206000200154858281548110610aa557fe5b60009182526020909120015560001901610a77565b5082848281548110610ac857fe5b600091825260209091200155505b505050565b80356001600160a01b038116811461080e57600080fd5b803560ff8116811461080e57600080fd5b600060208284031215610b14578081fd5b61080b8383610adb565b600080600080600080600060e0888a031215610b38578283fd5b610b428989610adb565b9650610b518960208a01610adb565b9550610b608960408a01610adb565b94506060880135935060808801359250610b7d8960a08a01610adb565b915060c0880135905092959891949750929550565b600080600060608486031215610ba6578283fd5b610bb08585610adb565b95602085013595506040909401359392505050565b600060208284031215610bd6578081fd5b5035919050565b6000610140808385031215610bf0578182fd5b610bf981610fd1565b9050610c058484610adb565b8152610c148460208501610adb565b6020820152610c268460408501610adb565b60408201526060830135606082015260808301356080820152610c4c8460a08501610adb565b60a082015260c083013560c0820152610c688460e08501610af2565b60e08201526101008381013590820152610120928301359281019290925250919050565b60008060408385031215610c9e578182fd5b50508035926020909101359150565b9788526bffffffffffffffffffffffff19606097881b811660208a015295871b8616603489015293861b85166048880152605c870192909252607c86015290921b16609c83015260b082015260d00190565b7f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b6001600160a01b039a8b168152988a1660208a0152968916604089015260608801959095526080870193909352951660a085015260c084019490945260ff90931660e08301526101008201929092526101208101919091526101400190565b6020808252825182820181905260009190848201906040850190845b81811015610dc757835183529284019291840191600101610dab565b50909695505050505050565b90815260200190565b93845260ff9290921660208401526040830152606082015260800190565b6020808252600c908201526b6f726465722d65786973747360a01b604082015260600190565b6020808252601190820152701a5b9d985b1a590b5c9958da5c1a595b9d607a1b604082015260600190565b602080825260159082015274696e76616c69642d6d616b65722d6164647265737360581b604082015260600190565b60208082526016908201527534b73b30b634b216b0b6b7bab73a16b7baba16b6b4b760511b604082015260600190565b6020808252601390820152723737ba16b9b4b3b732b216b13c96b6b0b5b2b960691b604082015260600190565b60208082526019908201527f6475706c69636174652d746f6b656e2d61646472657373657300000000000000604082015260600190565b60208082526010908201526f696e76616c69642d646561646c696e6560801b604082015260600190565b6020808252601a908201527f696e76616c69642d66726f6d2d746f6b656e2d61646472657373000000000000604082015260600190565b60208082526011908201527034b73b30b634b216b0b6b7bab73a16b4b760791b604082015260600190565b60208082526018908201527f696e76616c69642d746f2d746f6b656e2d616464726573730000000000000000604082015260600190565b60405181810167ffffffffffffffff81118282101715610ff057600080fd5b60405291905056fea26469706673582212206e5551c65a5114ef06b39c9a512d70d149c084fa1fc4575db8cbfe2047881c0964736f6c634300060c0033";
